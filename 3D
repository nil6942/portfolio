import { Canvas, useFrame } from '@react-three/fiber'
import { Environment, Stars, OrbitControls, Text } from '@react-three/drei'
import { EffectComposer, Bloom, Vignette, Noise } from '@react-three/postprocessing'
import { Suspense, useRef } from 'react'

function Emblem() {
  const group = useRef()
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    if (group.current) {
      group.current.rotation.y = t * 0.25
      group.current.position.y = Math.sin(t * 0.8) * 0.25 + 0.5
    }
  })
  return (
    <group ref={group}>
      <mesh castShadow>
        <icosahedronGeometry args={[1, 1]} />
        <meshStandardMaterial color="#d1b200" emissive="#3a2b00" metalness={0.9} roughness={0.2} />
      </mesh>
      <mesh scale={1.35}>
        <icosahedronGeometry args={[1, 0]} />
        <meshStandardMaterial color="#000" emissive="#b18d00" emissiveIntensity={1.4} wireframe />
      </mesh>
    </group>
  )
}

function Pillar({ x = 0, z = 0, h = 6 }) {
  const ref = useRef()
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    if (ref.current) ref.current.material.emissiveIntensity = 0.6 + Math.sin(t + x + z) * 0.2
  })
  return (
    <mesh position={[x, h / 2 - 1, z]} castShadow receiveShadow>
      <cylinderGeometry args={[0.25, 0.4, h, 16]} />
      <meshStandardMaterial ref={ref} color="#1a1a1a" emissive="#2a1a00" metalness={0.4} roughness={0.6} />
    </mesh>
  )
}

function Floor() {
  return (
    <mesh rotation={[-Math.PI / 2, 0, 0]} receiveShadow>
      <planeGeometry args={[100, 100, 64, 64]} />
      <meshStandardMaterial color="#0a0a0a" roughness={1} metalness={0} />
    </mesh>
  )
}

export default function Scene() {
  const pillars = []
  const ringRadius = 7
  const count = 12
  for (let i = 0; i < count; i++) {
    const angle = (i / count) * Math.PI * 2
    const x = Math.cos(angle) * ringRadius
    const z = Math.sin(angle) * ringRadius
    pillars.push({ x, z, h: 6 + (i % 3) })
  }

  return (
    <Canvas shadows camera={{ position: [0, 2.2, 8], fov: 45 }} gl={{ antialias: true }}>
      <color attach="background" args={["#070707"]} />
      <fog attach="fog" args={["#070707", 6, 35]} />

      <ambientLight intensity={0.2} />
      <directionalLight
        position={[5, 8, 5]}
        intensity={1.2}
        color="#ffcf6e"
        castShadow
        shadow-mapSize-width={2048}
        shadow-mapSize-height={2048}
      />
      <pointLight position={[-5, 3, -3]} intensity={0.6} color="#6ea2ff" />

      <Suspense fallback={null}>
        <Stars radius={80} depth={50} count={5000} factor={4} saturation={0} fade speed={0.6} />
        <Environment preset="warehouse" environmentIntensity={0.15} />
        <Floor />
        {pillars.map((p, i) => (
          <Pillar key={i} x={p.x} z={p.z} h={p.h} />
        ))}
        <Emblem />
        <Text
          position={[0, 3.6, 0]}
          fontSize={0.6}
          color="#e6d39a"
          anchorX="center"
          anchorY="middle"
          outlineWidth={0.015}
          outlineColor="#000"
        >
          IMPERIUM OF CODE
        </Text>
      </Suspense>

      <EffectComposer>
        <Bloom intensity={1.2} luminanceThreshold={0.2} luminanceSmoothing={0.9} mipmapBlur />
        <Vignette eskil offset={0.2} darkness={0.8} />
        <Noise premultiply opacity={0.05} />
      </EffectComposer>

      <OrbitControls enablePan={false} maxPolarAngle={Math.PI * 0.6} minDistance={4} maxDistance={14} />
    </Canvas>
  )
}
